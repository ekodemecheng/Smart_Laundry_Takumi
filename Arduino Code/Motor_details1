// =============================================
// PROGRAM KONTROL MOTOR PWM DENGAN TAMPILAN SERAGAM
// OLED DAN SERIAL MONITOR
// =============================================

/* 
 * FITUR UTAMA:
 * 1. Membaca nilai potensiometer (0-1023)
 * 2. Mengkonversi ke nilai PWM (0-255)
 * 3. Mengontrol kecepatan motor DC
 * 4. Menampilkan nilai di OLED dan Serial Monitor dengan format seragam
 * 5. Update tampilan setiap 100ms untuk stabilitas
 */

// 1. PUSTAKA (LIBRARIES)
#include <Arduino.h>    // Pustaka dasar Arduino
#include <U8g2lib.h>    // Pustaka untuk kontrol display OLED
#include <SPI.h>        // Pustaka komunikasi SPI
#include <Wire.h>       // Pustaka komunikasi I2C

// 2. DEKLARASI VARIABEL DAN OBJEK
U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0); // Objek display OLED 128x32
const int motorPin = 9;       // Pin PWM untuk kontrol motor
const int potensiometerPin = A0; // Pin input analog untuk potensiometer

// 3. FUNGSI SETUP (DIJALANKAN SEKALI SAAT START)
void setup(void) {
  // Inisialisasi display OLED
  u8g2.begin();
  
  // Inisialisasi komunikasi serial
  Serial.begin(9600);
  while (!Serial); // Tunggu hingga serial ready
  
  // Set pin motor sebagai output
  pinMode(motorPin, OUTPUT);
  
  // Tampilan awal di Serial Monitor
  Serial.println("================================");
  Serial.println("  SISTEM KONTROL MOTOR PWM");
  Serial.println("================================");
  Serial.println(" Potensiometer | Nilai PWM ");
  Serial.println("----------------------------");
  
  // Tampilan awal di OLED
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_7x14B_tf);
  u8g2.drawStr(0, 15, "Pot:");
  u8g2.drawStr(0, 30, "PWM:");
  u8g2.sendBuffer();
}

// 4. FUNGSI LOOP (DIJALANKAN BERULANG)
void loop(void) {
  // 4.1 Baca nilai potensiometer (0-1023)
  int sensorValue = analogRead(potensiometerPin);
  
  // 4.2 Konversi ke nilai PWM (0-255)
  int pwmValue = sensorValue / 4;
  
  // 4.3 Kontrol motor dengan PWM
  analogWrite(motorPin, pwmValue);
  
  // 4.4 Tampilkan di OLED
  u8g2.clearBuffer();
  
  // Set font dan tampilkan label
  u8g2.setFont(u8g2_font_7x14B_tf);
  u8g2.drawStr(0, 15, "Pot:");
  u8g2.drawStr(0, 30, "PWM:");
  
  // Konversi nilai ke string
  char displayStr[16];
  
  // Tampilkan nilai potensiometer
  sprintf(displayStr, "%4d", sensorValue);
  u8g2.drawStr(40, 15, displayStr);
  
  // Tampilkan nilai PWM
  sprintf(displayStr, "%3d", pwmValue);
  u8g2.drawStr(40, 30, displayStr);
  
  u8g2.sendBuffer();
  
  // 4.5 Tampilkan di Serial Monitor (format seragam dengan OLED)
  Serial.print("    ");
  Serial.print(sensorValue);
  Serial.print("    |    ");
  Serial.println(pwmValue);
  
  // 4.6 Delay untuk stabilitas
  delay(100);
}

/*
 * PENJELASAN TAMBAHAN:
 * 1. Format tampilan di Serial Monitor dibuat seragam dengan OLED
 *    - Keduanya menampilkan nilai Potensiometer dan PWM
 *    - Format angka rata kanan dengan lebar tetap
 * 2. OLED menggunakan font 7x14B yang jelas terbaca
 * 3. Serial Monitor menampilkan dalam format tabel
 * 4. Delay 100ms memberikan pembacaan yang stabil
 * 5. Program siap untuk ditambah fitur seperti:
 *    - Kalibrasi otomatis
 *    - Batas maksimum/minimum PWM
 *    - Tampilan grafik (jika menggunakan OLED yang lebih besar)
 */
